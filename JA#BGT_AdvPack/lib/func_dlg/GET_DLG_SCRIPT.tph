DEFINE_ACTION_FUNCTION GET_DLG_SCRIPT
	INT_VAR idx_state = 0
			idx_response = 0
	STR_VAR dlg_file = ~~
	RET idx_state_trigger // state weight
		state_trigger
		response_trigger
		response_action
BEGIN
	COPY_EXISTING ~%dlg_file%~ ~override~
		READ_LONG 0x08 num_states
		PATCH_IF (idx_state >= num_states) BEGIN
			PATCH_FAIL ~GET_DLG_STATE_RESPONSE: In %dlg_file% state %idx_state% is out of bound!~
		END

		READ_LONG 0x0c ofs_states
		READ_LONG 0x14 ofs_responses
		READ_LONG 0x18 ofs_state_triggers
		READ_LONG 0x20 ofs_response_triggers
		READ_LONG 0x28 ofs_actions

		SET state = ofs_states + (idx_state * 0x10)
		// READ_LONG (state + 0x0) state_strref
		READ_LONG (state + 0x4) idx_first_response
		READ_LONG (state + 0x8) num_responses
		READ_LONG (state + 0xc) idx_state_trigger
		PATCH_IF (idx_response >= num_responses) BEGIN
			PATCH_FAIL ~GET_DLG_STATE_RESPONSE: In %dlg_file% state %idx_state% response %idx_response% is out of bound!~
		END

		TEXT_SPRINT state_trigger ~~
		PATCH_IF (idx_state_trigger >= 0) BEGIN
			SET trigger = ofs_state_triggers + (idx_state_trigger * 0x8)
			READ_LONG (trigger + 0x0) ofs_trigger
			READ_LONG (trigger + 0x4) len_trigger
			READ_ASCII ofs_trigger state_trigger (len_trigger) NULL
		END

		SET response = ofs_responses + ((idx_first_response + idx_response) * 0x20)
		READ_LONG (response + 0x0) response_flags
		// READ_LONG (response + 0x4) response_strref
		// READ_LONG (response + 0x8) response_journal

		TEXT_SPRINT response_trigger ~~
		PATCH_IF (response_flags & BIT1) BEGIN
			READ_LONG (response + 0x0c) idx_response_trigger

			SET trigger = ofs_response_triggers + (idx_response_trigger * 0x8)
			READ_LONG (trigger + 0x0) ofs_response_trigger
			READ_LONG (trigger + 0x4) len_response_trigger
			READ_ASCII ofs_response_trigger response_trigger (len_response_trigger) NULL
		END

		TEXT_SPRINT response_action ~~
		PATCH_IF (response_flags & BIT2) BEGIN
			READ_LONG (response + 0x10) idx_action

			SET action = ofs_actions + (idx_action * 0x8)
			READ_LONG (action + 0x0) ofs_action
			READ_LONG (action + 0x4) len_action
			READ_ASCII ofs_action response_action (len_action) NULL
		END
	BUT_ONLY
END
